/**
 * angular-mixin - Extending Angular to provide a mixin() method in an Angular module
 * @version v0.2.0
 * @link https://github.com/StackAndHeap/angular-mixin
 * @license MIT
 * @author Roland Zwaga <roland@stackandheap.com>
 */
!function(){"use strict";var r=angular.module("angular-mixin",["ng"]);r.provider("$angularTrait",[function(){var r={};this.register=function(n,t){return r[n]=t,this},this.$get=[function(){return function(n){return r[n]}}]}]),r.provider("$angularMixin",["$controllerProvider","$provide",function(r,n){function t(r,n,t,i,e){t[n].forEach(function(n){var t=e(n);angular.isFunction(t)?t.call(r.prototype):angular.extend(r.prototype,t)}),delete i[n]}function i(r,n){var i=r.instantiate;a.instantiate=function(r,e){var a=r;return angular.isArray(a)&&(a=a[a.length-1]),a.$$ngName&&u[a.$$ngName]&&t(a,a.$$ngName,u,g,n),i(r,e)}}function e(r){!angular.isString(r)}var a,u={},o={},g={},c=r.$get;r.$get=["$injector","$window","$angularTrait","$rootElement",function(r,n,s,l){var $=c[2](r,n),f=function(r,n){if(a||(a=l.data("$injector"),i(a,s)),angular.isString(r)&&u[r]&&g[r]){var c=g[r];t(c,r,u,g,s)}return e(r,o,g),$(r,n)};return f}];var s=r.register;r.register=function(r,n){var t=n;angular.isArray(t)&&(t=t[t.length-1]),g[r]=t,s(r,n)};var l=n.service;n.service=function(r,n){var t=n;return angular.isArray(t)&&(t=t[t.length-1]),t.$$ngName=r,l(r,n)},this.register=function(r,n){return angular.isString(n)&&(n=[n]),u[r]=n,this},this.registerInterceptor=function(r,n){var t=r.split(".");return o[t[0]]=[t[1],n],this},this.$get=[function(){return{}}]}])}();