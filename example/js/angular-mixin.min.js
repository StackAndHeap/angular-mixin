/**
 * angular-mixin - Extending Angular to provide a mixin() method in an Angular module
 * @version v0.1.0
 * @link https://github.com/StackAndHeap/angular-mixin
 * @license MIT
 * @author [object Object]
 */
!function(){"use strict";function r(r,n,i){var e=[n,i];return r._invokeQueue.push(["$angularTraitProvider","register",e]),r}function n(r,n){var i;if(angular.isString(n))i=[n];else{if(!angular.isArray(n))return r;i=n}var e=r._invokeQueue[r._invokeQueue.length-1];if("$controllerProvider"===e[0]){var t=[e[2][0],i];r._invokeQueue.push(["$angularMixinProvider","register",t])}return r}var i=angular.module("angular-mixin",["ng"]);i.provider("$angularTrait",[function(){var r={};this.register=function(n,i){r[n]=i},this.$get=[function(){return function(n){var i=r[n];return angular.isFunction(i)&&(i=new i),i}}]}]),i.provider("$angularMixin",["$controllerProvider",function(r){var n={},i={},e=r.$get;r.$get=["$injector","$window","$angularTrait",function(r,t,u){var a=e[2](r,t),o=function(r,e){if(angular.isString(r)&&n[r]&&i[r]){var t=i[r];n[r].forEach(function(r){angular.extend(t.prototype,u(r))}),delete i[r]}return a(r,e)};return o}];var t=r.register;r.register=function(r,n){var e=n;angular.isArray(e)&&(e=e[e.length-1]),i[r]=e,t(r,n)},this.register=function(r,i){n[r]=i},this.$get=[function(){return{}}]}]);var e=angular.module;angular.module=function(i,t,u){var a=e(i,t,u);return a.mixin=function(r){return n(a,r)},a.trait=function(n,i){return r(a,n,i)},a}}();